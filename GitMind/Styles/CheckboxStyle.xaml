<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	
	<Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>-->
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">

					<!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="14" Height="14">
								<Border x:Name="Border" 
													Background="{TemplateBinding Background}" 
													BorderBrush="{TemplateBinding BorderBrush}" 
													BorderThickness="{TemplateBinding BorderThickness}"/>
								<Path x:Name="CheckMark" 
												Stroke="{StaticResource TextBrush}" 
												StrokeThickness="2"
												SnapsToDevicePixels="False" 
												Data="M 2 5 L 5 10 11 2"/>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								Margin="6,0" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
								RecognizesAccessKey="True"/>
					</BulletDecorator>

					<!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="Transparent"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedItemBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="Transparent"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedItemBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="Transparent"/>
							<Setter TargetName="CheckMark" Property="Stroke" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>